Instructions for producing Gamma + jet step 1 root file 
-----------------------------------

##########################################################
# *Target: CMS Gamma + Jet  - JEC calculation            #
# *Author: Hugues                                        #
# *Last update: 21 Sept 2018                              #
#                                                        #
# Lines starting with '$' are commands to be executed    #
# (after necessary changes when needed), all other text  #
# is just instructions or program output.                #
########################################################## 

Set up a working directory and do a local test run 

$ ssh -X hlattaud@lxplus.cern.ch
$ mkdir myworkdir
$ cd myworkdir
$ echo $SCRAM_ARCH # Let's check if we have a good compiler version in use
slc6_amd64_gcc491 # <- seems to be incompatible with CMSSW 8.0.26.patch1, let's update
$ export SCRAM_ARCH=slc6_amd64_gcc530



following these twikis you should have a CMSSW environment ready for Egamma tuple production :  
https://twiki.cern.ch/twiki/bin/view/CMS/Egamma2017DataRecommendations

The summary of all the command you need to run is given below : 

#####EG regression smearer etc
#####https://twiki.cern.ch/twiki/bin/viewauth/CMS/EGMRegression

$cmsrel CMSSW_9_4_9_cand2
$cd CMSSW_9_4_9_cand2/src
$cmsenv
$git cms-init
$git cms-merge-topic cms-egamma:EgammaPostRecoTools_940 #just adds in an extra file to have a setup function to make things easier
$scram b -j 8

### photon ID
https://twiki.cern.ch/twiki/bin/view/CMS/CutBasedPhotonIdentificationRun2

cmsrel CMSSW_9_4_0
cd CMSSW_9_4_0/src
cmsenv
git cms-merge-topic lsoffi:CMSSW_9_4_0_pre3_TnP
scram b -j 10

# Add the area containing the MVA weights (from cms-data, to appear in “external”).
# Note: the “external” area appears after “scram build” is run at least once, as above
#
$cd $CMSSW_BASE/external
# below, you may have a different architecture, this is just one example from lxplus
$cd slc6_amd64_gcc630/
$git clone https://github.com/lsoffi/RecoEgamma-PhotonIdentification.git data/RecoEgamma/PhotonIdentification/data
$cd data/RecoEgamma/PhotonIdentification/data
$git checkout CMSSW_9_4_0_pre3_TnP
$cd $CMSSW_BASE/external
$cd slc6_amd64_gcc630/
$git clone https://github.com/lsoffi/RecoEgamma-ElectronIdentification.git data/RecoEgamma/ElectronIdentification/data
$cd data/RecoEgamma/ElectronIdentification/data
$git checkout CMSSW_9_4_0_pre3_TnP
# Go back to the src/
$cd $CMSSW_BASE/src



########SetUp the Gamma + Jet frame work ############

$ cd CMSSW/src
$git clone https://github.com/lattaud/DijetRootTreeMaker.git CMSDIJET/DijetRootTreeMaker/
$git checkout 9_2_X

compile everything

$ scram b -j 8

## Test run ##

You'll find the CMSSW config file in the prod repository : Config_RunonMiniaod.py

before to launch any local test run first download all the JERC text file you want to use in the data/ repository from the following github page : 

https://github.com/cms-jet/JECDatabase/textFiles/


$ cmsRun Config_RunonMiniaod.py globalTag=the_wanted_global_tag  isRunonData=True_or_False isEndcaps=True_or_False JECData=the_wanted_JEC JECMC=the_wanted_JEC maxEvents=numberofeventstoprocess


 Successful run looks something like this:

[long list of warnings about triggers here]
Begin processing the 8th record. Run 273730, Event 3146673520, LumiSection 2623 at 13-Jun-2016 10:49:45.182 CEST
Begin processing the 9th record. Run 273730, Event 3146111224, LumiSection 2623 at 13-Jun-2016 10:49:45.187 CEST
Begin processing the 10th record. Run 273730, Event 3146571947, LumiSection 2623 at 13-Jun-2016 10:49:45.189 CEST
13-Jun-2016 10:49:45 CEST  Closed file file:/afs/cern.ch/user/j/juska/eos/cms/store/data/Run2016B/JetHT/MINIAOD/PromptReco-v2/000/273/730/00000/EA345ED4-B821-E611-BEA5-02163E0138E2.root


You can now look at your output rootfile. A Healthy rootfile look like a file with a single tree called events that store all the variables your are interested in.


If all went correctly you can now begin crab production.
Make sure to have your grid certificate installed on your lxplus account

$ cd prod/crab/CERN_crab/
$ source /cvmfs/cms.cern.ch/crab3/crab.sh
$ voms-proxy-init --voms cms --valid 168:00

to launch the job processing on crab3 use the  	crabSubmit.py with the required crab config file template and the json file that list the sample you want to process :

for example to process data : 
$ python crabSubmit.py -t crab_configDATA.py Sample_data.json 
            to process MC : 
$ python crabSubmit.py -t crab_configMC.py Sample_NLO.json 



Your are now ready to go to the next step called DijettreeAnalyser.




                              

